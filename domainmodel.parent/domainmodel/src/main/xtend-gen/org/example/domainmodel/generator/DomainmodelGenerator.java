/**
 * generated by Xtext 2.9.1
 */
package org.example.domainmodel.generator;

import com.google.inject.Inject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.naming.IQualifiedNameProvider;
import org.eclipse.xtext.xbase.lib.Extension;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class DomainmodelGenerator extends AbstractGenerator {
  @Inject
  @Extension
  private IQualifiedNameProvider _iQualifiedNameProvider;
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field Entity is undefined");
  }
  
  public CharSequence compile(final /* Entity */Object e) {
    throw new Error("Unresolved compilation problems:"
      + "\neContainer cannot be resolved"
      + "\nfullyQualifiedName cannot be resolved"
      + "\n!= cannot be resolved"
      + "\neContainer cannot be resolved"
      + "\nfullyQualifiedName cannot be resolved"
      + "\nname cannot be resolved"
      + "\nsuperType cannot be resolved"
      + "\n!= cannot be resolved"
      + "\nsuperType cannot be resolved"
      + "\nfullyQualifiedName cannot be resolved"
      + "\nfeatures cannot be resolved"
      + "\ncompile cannot be resolved");
  }
  
  public CharSequence compile(final /* Feature */Object f) {
    throw new Error("Unresolved compilation problems:"
      + "\ntype cannot be resolved"
      + "\nfullyQualifiedName cannot be resolved"
      + "\nname cannot be resolved"
      + "\ntype cannot be resolved"
      + "\nfullyQualifiedName cannot be resolved"
      + "\nname cannot be resolved"
      + "\ntoFirstUpper cannot be resolved"
      + "\nname cannot be resolved"
      + "\nname cannot be resolved"
      + "\ntoFirstUpper cannot be resolved"
      + "\ntype cannot be resolved"
      + "\nfullyQualifiedName cannot be resolved"
      + "\nname cannot be resolved"
      + "\nname cannot be resolved"
      + "\nname cannot be resolved");
  }
}
